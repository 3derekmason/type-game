.game {
  width: 50%;
  padding-top: 80px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 16px;
  color: var(--primary-light);
}

.wordHolder {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.game h1 {
  font-size: clamp(10px, 20px, 32px);
  font-family: var(--font-mono);
  min-width: 12px;
  text-align: center;
}

.game input {
  width: 90%;
  text-align: center;
  height: 3rem;
  border: transparent;
  border-bottom: 2px solid var(--primary-dark);
  background: none;
  color: transparent;
  transform: translateY(-100%);
}

.game input:focus {
  border-bottom: 2px solid var(--secondary-dark);
  outline: none;
}

.game input.inputMatch {
  border-bottom: 2px solid var(--guess-correct);
}

.noMatch {
  color: var(--guess-none);
}

.wrongMatch {
  color: var(--guess-wrong);
}

.match,
.game p {
  color: var(--guess-correct);
}

.gameTools {
  margin-top: 16px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 90%;
}

.gameTools button {
  width: 40%;
  height: 40px;
  border-radius: 8px;
  font-size: 1rem;
  border: 1px solid var(--primary-main);
  color: var(--primary-light);
  background: none;
  transition: 0.2s;
}

.gameTools button:hover {
  cursor: pointer;
  border: 1px solid var(--primary-dark);
  color: var(--secondary-light);
  transition: 0.2s;
}

.gameTools button:active {
  border: none;
}

.gameTools img {
  filter: invert(92%) sepia(93%) saturate(0%) hue-rotate(202deg)
    brightness(106%) contrast(106%);
}

.scoresForTarget {
  margin-top: 40px;
  padding: 8px;
  width: 360px;
  height: 48px;
  overflow: auto;
  opacity: 0.6;
  transition: 0.2s;
}

.scoresForTarget:hover {
  opacity: 1;
  transition: 0.2s;
}

.scoresForTarget p {
  color: var(--secondary-light);
}

.highScore {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@media screen and (max-width: 800px) {
  .game {
    width: 90%;
    padding-top: 2rem;
  }

  .game h1 {
    min-width: none;
  }

  .wordHolder {
    flex-wrap: wrap;
  }
}
